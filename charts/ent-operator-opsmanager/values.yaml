---
name: ops-manager
replicas: 1
version: "4.4.2"


# Set this to true if your cluster is managing SecurityContext for you.
# If running OpenShift (Cloud, Minishift, etc.), set this to true.
managedSecurityContext: false

# Kubernetes internal DNS
clusterName: cluster.local

# Section to describe components that needs to be installed
# mongodb-enterprise-operator.enabled: will deploy operator in the same namespace.
# This should be set to false if operator is already managing namespace
# deployValidationWebhooks: will deploy optional CRD validation webhooks.
# Validation webhooks ensure that CRD is valid before applying it to a cluster with kubectl.
# Without webhooks Operator will perform validation and logs would need to be checked

mongodb-enterprise-operator:
  enabled: true
  watchOpsManager: true
  watchDatabase: true

deployValidationWebhooks: true  # Optional configuration.

# MongoDB Ops Manager configuration parameters

# Deploy Ops Manager backup daemon and set it up.
# Note: OpLogs DB needs to be provisioned separately
deployBackupInfrastructure: true

# for fully air-gapped environemnts choose "local"
# to proxy mongodb installers download via Ops Manager choose "remote"
versionSource: "mongodb"  # [ mongodb| local| remote ]
installerVolumeSize: "20G"

# Ops Manager Global Admin user name and password.
# Ensure it complies with OpsManager password format
globalAdmin: "test@test.com"
globalAdminPassword: "KubeTest!1"
globalAdminFirstName: "First Name"
globalAdminLastName: "Last Name"

# enable Access Lists for Ops Manager
publicApi:
  whitelistEnabled: false


minimumTLSVersion: "TLSv1.2"

# This section is not managed by HELM Chart for now. OpLog DB should be provisioned as a Mongo DB CRD
backup:
  enabled: true
  configureObjectStore: true  # aka S3
  configureBlockStore: false
  configureFileSystem: false  # For OpsManager v 4.4.2+
  opLog:
    name: opLog1
    mongodbResourceRef: om-mongodb-oplog
    mongodbUserRef: admin-user
  s3Stores:
    name: s3store1
      # the name of the secret which contains aws credentials
    s3SecretRef: my-aws-creds
    s3BucketEndpoint: s3.us-east-1.amazonaws.com
    s3BucketName: my-bucket-name
    pathStyleAccessEnabled: true

# Required: SMTP Mail server set up for password recovery
mail:
  adminEmailAddr: "support@example.com"
  hostname: "email-smtp.us-east-1.amazonaws.com"
  port: "465"
  ssl: "true"
  transport: "smtp"
resources:
  limits:
    cpu: 2
    memory: 8G
  requests:
    cpu: 1
    memory: 6G
tolerations: []

# Set this to true if the operator will require Kubernetes CA
# infrastructure to generate TLS certificates.
needsCAInfrastructure: true

# Set this to false to disable subresource utilization
# It might be required on some versions of Openshift 3.11
subresourceEnabled: true

registry:
  imagePullSecrets:
